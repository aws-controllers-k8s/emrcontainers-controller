// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// JobTemplateSpec defines the desired state of JobTemplate.
//
// This entity describes a job template. Job template stores values of StartJobRun
// API request in a template and can be used to start a job run. Job template
// allows two use cases: avoid repeating recurring StartJobRun API request values,
// enforcing certain values in StartJobRun API request.
type JobTemplateSpec struct {

	// The client token of the job template.
	//
	// Regex Pattern: `\S`
	// +kubebuilder:validation:Required
	ClientToken *string `json:"clientToken"`
	// The job template data which holds values of StartJobRun API request.
	// +kubebuilder:validation:Required
	JobTemplateData *JobTemplateData `json:"jobTemplateData"`
	// The KMS key ARN used to encrypt the job template.
	//
	// Regex Pattern: `^(arn:(aws[a-zA-Z0-9-]*):kms:.+:(\d{12})?:key\/[(0-9a-zA-Z)-?]+|\$\{[a-zA-Z]\w*\})$`
	KMSKeyARN *string `json:"kmsKeyARN,omitempty"`
	// The specified name of the job template.
	//
	// Regex Pattern: `^[\.\-_/#A-Za-z0-9]+$`
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// The tags that are associated with the job template.
	Tags map[string]*string `json:"tags,omitempty"`
}

// JobTemplateStatus defines the observed state of JobTemplate
type JobTemplateStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// This output displays the date and time when the job template was created.
	// +kubebuilder:validation:Optional
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	// This output display the created job template ID.
	//
	// Regex Pattern: `^[0-9a-z]+$`
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty"`
}

// JobTemplate is the Schema for the JobTemplates API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type JobTemplate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobTemplateSpec   `json:"spec,omitempty"`
	Status            JobTemplateStatus `json:"status,omitempty"`
}

// JobTemplateList contains a list of JobTemplate
// +kubebuilder:object:root=true
type JobTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []JobTemplate `json:"items"`
}

func init() {
	SchemeBuilder.Register(&JobTemplate{}, &JobTemplateList{})
}
